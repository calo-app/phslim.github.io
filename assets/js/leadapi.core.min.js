(function () { var n, i, t; n = jQuery; i = { url: "http://37.252.0.104/api/", landingSplit: null, productId: null, price: null, shippingCost: null, phone: null, phoneObject: null, phoneSelector: "", name: null, nameObject: null, nameSelector: "", address: null, addressObject: null, addressSelector: "", city: null, cityObject: null, citySelector: "", country: null, countryObject: null, countrySelector: "", secondPhone: null, secondPhoneObject: null, secondPhoneSelector: "", parameters: {}, sendOnClick: !1, redirect: !1, redirectUrl: "", getApidFromUrl: !1, regexApidFromUrl: /\?apid=([0-9-]+)\&?/i, blocking: !0, blockingMessage: "<h4><img src='/images/busy.gif' />&nbsp;Пожалуйста подождите...<\/h4>", onInvalid: function (n) { var r, t, u, i; for (i = [], t = 0, u = n.length; t < u; t++) r = n[t], i.push(alert(r.msg)); return i }, onSuccess: null, onError: function (t) { var i; return t && t.ModelState ? (i = "", n.each(t.ModelState, function (n, t) { return i += "" + n + " : " + t[0] + "\n" }), alert(i)) : alert("Ошибка при выполнение запроса") } }; t = { init: function (i, r) { return this.timer || (this.timer = 0, setInterval(function (n) { return function () { return n.timer++ } }(this), 1e3)), r.blocking !== !0 || n.blockUI || n.error("Необходимо подключить библиотеку jquery.blockUI.js или выключить опцию blocking"), i.click(function () { if (r.sendOnClick === !0) return t.sendRequest(i, r) }) }, build: function (t, i) { var r, u, f, e, o, s; return o = i.phoneObject ? n(i.phoneObject) : i.phoneSelector ? n(i.phoneSelector) : null, e = i.nameObject ? n(i.nameObject) : i.nameSelector ? n(i.nameSelector) : null, r = i.addressObject ? n(i.addressObject) : i.addressSelector ? n(i.addressSelector) : null, u = i.cityObject ? n(i.cityObject) : i.citySelector ? n(i.citySelector) : null, f = i.countryObject ? n(i.countryObject) : i.countrySelector ? n(i.countrySelector) : null, s = i.secondPhoneObject ? n(i.secondPhoneObject) : i.secondPhoneSelector ? n(i.secondPhoneSelector) : null, { apid: i.getApidFromUrl === !0 ? this.getApidFromUrl(t, i) : 0, phoneElement: o, phone: i.phone !== null ? i.phone : o ? o.val() : "", nameElement: e, name: i.name !== null ? i.name : e ? e.val() : "", addressElement: r, address: i.address !== null ? i.address : r ? r.val() : "", cityElement: u, city: i.city !== null ? i.city : u ? u.val() : "", countryElement: f, country: i.country !== null ? i.country : f ? f.val() : "", secondPhoneElement: s, secondPhone: i.secondPhone !== null ? i.secondPhone : s ? s.val() : "" } }, validate: function (n, t, i) { var r; return r = [], i.apid === null && (i.phone && i.phone !== "" || r.push({ obj: i.phoneElement, msg: "Телефон обязателен для заказа" }), i.name && i.name !== "" || r.push({ obj: i.nameElement, msg: "Имя обязателеное поле для заказа" }), t.landingSplit || r.push({ obj: null, msg: "Код варианта лендинга не указан в заказе" }), t.productId || r.push({ obj: null, msg: "Внешнний код продукта не указан в заказе" })), r }, sendRequest: function (t, i) { var u, r; if (r = this.build(t, i), u = this.validate(t, i, r), u.length > 0) { i.onInvalid(u); return } return i.blocking === !0 && n.blockUI({ message: i.blockingMessage }), n.ajax({ url: "" + i.url + "Lead", type: "POST", data: JSON.stringify({ id: r.apid, phone: r.phone, name: r.name, address: r.address, country: r.country, city: r.city, secondPhone: r.secondPhone, landingSplit: i.landingSplit, productId: i.productId, price: i.price, shippingCost: i.shippingCost, timer: this.timer, queryString: window.location.href, referrer: document.referrer, parameters: i.parameters }), dataType: "json", contentType: "application/json", success: function (t) { if (i.onSuccess && t) i.onSuccess(t); return i.blocking === !0 && n.unblockUI(), i.redirect === !0 ? document.location = i.redirectUrl.replace("{#APID}", t) : void 0 }, error: function (t) { return i.blocking === !0 && n.unblockUI(), t && t.responseText ? i.onError(jQuery.parseJSON(t.responseText)) : alert("Ошибка при выполнение запроса") } }) }, getApidFromUrl: function (n, t) { var i; return i = window.location.href.match(t.regexApidFromUrl), i && i.length > 1 ? i[1] : void 0 } }; n.fn.leadAPI = function (r, u) { var f; if (r in t) return f = [], n(this).each(function (i, e) { var o, s; return o = n(e), o.data("options") || n.error("Function leadAPI() does not exist for " + e + " object."), s = n.extend({}, o.data("options"), u), o.data("options", s), f[i] = t[r](o, s, arguments, 1) }), f; if (typeof r == "object" || !r) { n(this).each(function (u, f) { var e, o; e = n(f); o = n.extend({}, i, e.data("options"), r); e.data("options", o); t.init(e, o) }); return } return n.error("Method " + r + " does not exist on jQuery.leadAPI") } }).call(this);
/*
//# sourceMappingURL=leadapi.core.min.js.map
*/